[{"path":"/2024/05/06/hello-world/","content":"myblog&#x2F;source&#x2F;_posts&#x2F;hello-world.md title: Hello WorldWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"个人消费记账系统","path":"/2024/05/06/moneysys/","content":"个人消费记账系统软件工程UML类图关系总结 待优化： 文章中已标记，可以优化的地方。 待研究： 文章中已标记，掌握不数量的地方。 1.需求：设计一个：个人消费记账系统 功能角度分析： 一个可以支持导入导出的记账系统数据、支持手动记账、支持分类别、 统计显示消费数据和消费对象、支持对消费数据做出评论、支持数据转换为图表并做出总结; 支持借款催收功能； 模块角度分析： 用户管理： 登录注册模块、个人信息模块 财务管理：（查账模块、催收模块（消息提示、欠款状态、欠款消除）） 导入导出模块：导入csv类型的数据、导出为…… 上传文件建立一张表，相关属性有：”文件备注“，”文件类型“，”文件路径“ 上传数据之后，需要跳转到文件管理页面，显示上传文件这张表 文件管理模块：可以将导入导出的数据显示再此处；可以对文件进行批处理; 设计师角度分析：一句话概括需求，再进行名称解释 定义记账系统数据：包括个人消费明细和统计数据明细 个人消费明细： 交易时间 交易类型 交易对方 商品 收&#x2F;支 金额(元) 支付方式 当前状态 交易单号 商户单号 备注 统计消费明细： 单独建一个导出数据表？？ 日、月、年、自定义消费属性，附加当次统计总结 总结：比如说明消费类型及金额 django 加密md5 再编辑需要有默认名: 12form = xxxxxModelForm(instance = row_object)render(*********) 重置密码： 重置密码相同： self.instance 是dxxxxx-model实际参数传输过来的对象 3.功能进度 登入、注册、登出 个人信息模块 导入导出模块 导入 文件管理模块 显示用户上传的文件 删除用户上传的文件 财务管理 查看 查看用户每条账单数据 查看用户日账单 查看用户月账单 查看用户年账单 添加 添加一个用户账单记录 管理 根据消费类型分类 账单+图表分析 日程管理 添加一条日程信息 查看日程信息 查看日、月、年日程信息 日程提示 某些人用了注释才知道[^注释] [^注释]:somebody that I used to know. 12函数 开发设计财务管理模块 查看 查看用户每条账单数据 查看用户日账单 查看用户月账单 查看用户年账单 添加 添加一个用户账单记录 管理 根据消费类型分类 账单+图表分析 难点：添加记录 、根据消费类型分类 设计思路： ​\t按年月日查询消费记录： 工具：ajax 、pandas ​\t添加记录 获取原始表格： 添加记录：按时间分类， 把时间和文件里面的时间依次进行判断，如果：日期相同，时间大于时，就将记录插入其中； ​\t根据消费类型分类 设置关键字 字典，进行模糊判断；在将不在其中的数据放到其他消费字段中 比如：总共有3个key: 饮食，娱乐，生活用品，出行； &#123; &#39;饮食&#39;:[&#39;吃&#39;,&#39;喝&#39;,&#39;炖罐&#39;,&#39;食堂&#39;,], &#39;娱乐&#39;:[&#39;猫眼&#39;,&#39;棋牌&#39;，&#39;台球&#39;,], &#39;生活用品&#39;:[&#39;牙膏&#39;,&#39;刮胡刀&#39;,], &#39;出行&#39;:[&#39;铁路&#39;,&#39;公交&#39;,&#39;地铁&#39;,], &#125; 12345 2. 获取原始数据 pass 12345678910111213141516171819202122232425262728293031323334 # 工具语法## django1. 模板： ```html 1.调用数据全都是用点， eg： 列表：list.0.0.i 字典：dict|hash:field 2.在javaScript，echarts中 eg: data = &#123;&#123; list|safe &#125;&#125; 注意：还没学会使用字典； 3.实例： &#123;% for field in accountList %&#125; &lt;div class=&quot;form-group my-3&quot;&gt; &lt;div class=&quot;card &quot;&gt; &lt;div class=&quot;card-header&quot; &gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;card-title col-md-6&quot; style=&quot;margin-bottom: 0px;&quot;&gt; 日期：&#123;&#123; field.0.0.0 &#125;&#125; &lt;/div&gt; &lt;div class=&quot;card-title col-md-6&quot; style=&quot;margin-bottom: 0px;&quot;&gt; 出：&#123;&#123; daydict|hash:field.0.0.0 &#125;&#125;元 &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &#123;% for value in field %&#125; django有特有的模板语法： 导入静态文件需要配置 添加到顶部：{ % load static % } 继承html模板：{ %extends ‘layout.html’% } 模板里面添加区块内容：{ % black css % } 嵌套集合、列表、字典都是通过.进行获取属性的 list.0.0.0 dict|hash:键名 json 还不会使用 多集合属性可以同时循环 123456789101112131415#在python 将list、dict属性放到列表中 account = [ list, dict] &#x27;&#x27;&#x27; 例子 accountList,dayAccounts = getAccount(info) dayAccounts.index = dayAccounts.index.strftime(&#x27;%Y-%m-%d&#x27;) dayAccounts = dayAccounts.to_records() # print(dayAccounts) # print(dayAccounts) accounts = zip(accountList,dayAccounts)&#x27;&#x27;&#x27;#在模板中实现同时循环&#123;% for list,dict in account %&#125;\t日期：&#123;&#123; list.0 &#125;&#125;&#123;% endfor %&#125; Form ：errors,label, post请求提交form时，需要添加：{ % csrf_token % } ajax还没学会使用 pandas待整理 echarts热力图 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465option = &#123; title: &#123; top: 30, left: &#x27;center&#x27;, text: &#x27;Daily Step Count&#x27; &#125;, tooltip: &#123; formatter: function (params) &#123; return params.value[0] + &#x27;&lt;br/&gt;&#x27; + params.value[1] + &#x27; steps&#x27;; &#125; &#125;, visualMap: &#123; min: 0, max: 10000, type: &#x27;piecewise&#x27;, orient: &#x27;horizontal&#x27;, left: &#x27;center&#x27;, top: 65, inRange: &#123; color: [&#x27;#ebedf0&#x27;, &#x27;#c6e48b&#x27;, &#x27;#7bc96f&#x27;, &#x27;#239a3b&#x27;, &#x27;#196127&#x27;] &#125; &#125;, calendar: &#123; top: 120, left: 30, right: 30, cellSize: [&#x27;auto&#x27;, 13], range: &#x27;2016&#x27;, itemStyle: &#123; borderWidth: 0.5 &#125;, yearLabel: &#123; show: false &#125; &#125;, series: [ &#123; type: &#x27;heatmap&#x27;, coordinateSystem: &#x27;calendar&#x27;, data: getVirtualData(&#x27;2016&#x27;) &#125;, &#123; type: &#x27;effectScatter&#x27;, // 涟漪效果 coordinateSystem: &#x27;calendar&#x27;, data: getVirtualData(&#x27;2016&#x27;,8000), symbolSize: function (val) &#123; return val[1] / 1000; // 涟漪大小和步数相关 &#125;, showEffectOn: &#x27;render&#x27;, // 渲染时显示涟漪 rippleEffect: &#123; brushType: &#x27;stroke&#x27; // 波纹类型为边界 &#125;, hoverAnimation: true, label: &#123; show: false &#125;, itemStyle: &#123; color: &#x27;purple&#x27;, // 涟漪颜色 shadowBlur: 10, shadowColor: &#x27;#333&#x27; &#125;, zlevel: 1 &#125; ]&#125;;option &amp;&amp; myChart.setOption(option); 2 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import * as echarts from &#x27;echarts&#x27;;var chartDom = document.getElementById(&#x27;main&#x27;);var myChart = echarts.init(chartDom);var option;function getVirtualData(year) &#123; const date = +echarts.time.parse(year + &#x27;-01-01&#x27;); const end = +echarts.time.parse(+year + 1 + &#x27;-01-01&#x27;); const dayTime = 3600 * 24 * 1000; const data = []; for (let time = date; time &lt; end; time += dayTime) &#123; data.push([ echarts.time.format(time, &#x27;&#123;yyyy&#125;-&#123;MM&#125;-&#123;dd&#125;&#x27;, false), Math.floor(Math.random() * 10000) ]); &#125; return data;&#125;option = &#123; title: &#123; top: 30, left: &#x27;center&#x27;, text: &#x27;Daily Step Count&#x27; &#125;, tooltip: &#123; formatter: function (params) &#123; return params.value[0] + &#x27;&lt;br/&gt;&#x27; + params.value[1] + &#x27; steps&#x27;; &#125; &#125;, visualMap: &#123; min: 0, max: 10000, type: &#x27;piecewise&#x27;, orient: &#x27;horizontal&#x27;, left: &#x27;center&#x27;, top: 65, inRange: &#123; color: [&#x27;#ebedf0&#x27;, &#x27;#c6e48b&#x27;, &#x27;#7bc96f&#x27;, &#x27;#239a3b&#x27;, &#x27;#196127&#x27;] &#125; &#125;, calendar: &#123; top: 120, left: 30, right: 30, cellSize: [&#x27;auto&#x27;, 13], range: &#x27;2016&#x27;, itemStyle: &#123; borderWidth: 0.5 &#125;, yearLabel: &#123; show: false &#125; &#125;, series: &#123; type: &#x27;heatmap&#x27;, coordinateSystem: &#x27;calendar&#x27;, data: getVirtualData(&#x27;2016&#x27;) &#125;&#125;;option &amp;&amp; myChart.setOption(option); 学习日记 日期 学习内容 完成情况 【2024年4月5日】:sunny: 1. 使用pandas完成对年月日的转化并且统计金额,熟悉使用pandas的语法格式、行列使用 待完成 开发模块代码1.用户管理1.用户注册、登录细节： 问题一：form中验证错误和返回错误时，遇到很多问题： 比如field.errors,field.error.0, loginForm.code.errors 解决问题的方式： 猥琐使用 loginForm.属性.errors，每一个字段都添加；待优化 问题二：验证码问题 画验证码图片 ：返回img，code； 上传： 设置url， return HttpResponse(stream.getvalue()) ，code 保存到session； 待研究 问题三：登录和注册放在一起遇到的验证冲突问题 和 部分渲染问题； 部分渲染: 返回时模板渲染页时需要携带reg和login的Form 验证冲突问题： 描述：提交一方，另一方提示未填写错误； 解决：提交按钮设置默认值作为区分， 问题四：特殊问题 request.POST..get() 和 Form.cleaned_data.get()；有些差异； filter 和 get 返回值问题 html : 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144&lt;!doctype html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt; &lt;title&gt;Bootstrap 101 Template&lt;/title&gt; &lt;!-- &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;--&gt; &lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;--&gt; &lt;!-- &lt;script src=&quot;https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;--&gt; &lt;!-- Bootstrap --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.css&#x27; %&#125;&quot;&gt; &lt;style&gt; body&#123; background-image: url(&#123;% static &#x27;/img/登入背景.jpg&#x27; %&#125;); &#125; .box&#123; width:1000px; min-height:650px; border:1px solid #c0c0c0; margin: 10px auto 0 auto; border-radius: 50px; background-color: #ffffff; padding-top: 30px; /*显示不了*/ /*background-image: url(&quot;img/云.png&quot;);*/ /*opacity:0.2;*/ &#125; .box0 &#123; width: 450px; border:1px solid #c0c0c0; /*居中*/ margin-top: 200px; margin-left: 350px; padding: 0 20px; background-image: url(&#123;% static &#x27;/img/登入背景.jpg&#x27; %&#125;); border-radius: 20px; &#125; .reg&#123; border:1px solid #c0c0c0; border-radius: 20px; &#125; .box0 h2&#123; text-align:center; margin-bottom: 30px; &#125; .form-control &#123; width: 80%; padding: 10px; box-sizing: border-box; border: 1px solid #ccc; border-radius: 4px; &#125; h2&#123; font-family: 华文楷体; font-size: 32px; text-align: center; margin-top: 15px; &#125; select&#123; background-color: green; color:white; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;爱记账&lt;/h2&gt;&lt;div class=&quot;container box&quot;&gt; &lt;h3 style=&quot;padding-left: 30px;font-size: 32px;font-family: 华文楷体&quot;&gt;注册&lt;/h3&gt; &lt;div class=&quot;row&quot;&gt; &lt;form class=&quot;form-horizontal&quot; action=&quot;/reg/&quot; method=&quot;post&quot; novalidate&gt; &lt;div class=&quot;col-md-5 col-md-offset-1 reg&quot; &gt; &#123;% csrf_token %&#125; &#123;% for field in regForm %&#125; &lt;div class=&quot;form-group &quot; style=&quot;margin-top: 20px&quot;&gt; &lt;label class=&quot;col-sm-3 control-label&quot; &gt;&#123;&#123; field.label &#125;&#125; &lt;/label&gt; &lt;div class=&quot;col-sm-9&quot;&gt; &#123;&#123; field &#125;&#125; &lt;span style=&quot;color:red&quot;&gt;&#123;&#123; field.errors &#125;&#125;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &#123;% endfor %&#125; &lt;button class=&quot;btn-primary col-md-offset-4&quot; style=&quot;width: 80px;height: 30px; border-radius:10px;margin-bottom: 15px&quot; type=&quot;submit&quot; name=&quot;reg&quot; value=&quot;注册&quot;&gt;注册&lt;/button&gt; &lt;/div&gt; &lt;/form&gt; &lt;!--提交--&gt; &lt;form class=&quot;form-horizontal&quot; action=&quot;/reg/&quot; method=&quot;post&quot; novalidate&gt; &#123;% csrf_token %&#125; &lt;h3 style=&quot;padding-left: 30px;margin-top: 180px;font-size: 32px;font-family: 华文楷体&quot;&gt;登录&lt;/h3&gt; &lt;div class=&quot;col-md-5 col-md-offset-6 reg&quot;&gt; &lt;div class=&quot;form-group &quot; style=&quot;margin-top: 20px; position:relative&quot;&gt; &lt;label class=&quot;col-sm-3 control-label&quot; &gt;&#123;&#123; loginForm.username.label &#125;&#125; &lt;/label&gt; &lt;div class=&quot;col-sm-9&quot;&gt; &#123;&#123; loginForm.username &#125;&#125; &lt;span style=&quot;color:red; position:absolute&quot;&gt;&#123;&#123; loginForm.username.errors &#125;&#125;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group &quot; style=&quot;margin-top: 20px&quot;&gt; &lt;label class=&quot;col-sm-3 control-label&quot; &gt;&#123;&#123; loginForm.password.label &#125;&#125; &lt;/label&gt; &lt;div class=&quot;col-sm-9&quot;&gt; &#123;&#123; loginForm.password &#125;&#125; &lt;span style=&quot;color:red&quot;&gt;&#123;&#123; loginForm.password.errors &#125;&#125;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-sm-3 control-label&quot;&gt; &lt;label&gt;&#123;&#123; loginForm.code.label &#125;&#125;&lt;/label&gt; &lt;/div&gt; &lt;div class=&quot;col-sm-5&quot;&gt; &#123;&#123; loginForm.code &#125;&#125; &lt;span style=&quot;color:red&quot;&gt;&#123;&#123; loginForm.code.errors &#125;&#125;&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;col-lg-offset-1&quot;&gt; &lt;div class=&quot;mt-3&quot;&gt; &lt;a href=&quot;/reg/&quot; &gt; &lt;img id=&quot;image_code&quot; src=&quot;/image/code/&quot; style=&quot;width: 125px;&quot;&gt; &lt;/a&gt; &lt;p style=&quot;color:purple&quot;&gt;点击图片刷新验证码&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-sm-offset-5 col-sm-7&quot;&gt; &lt;!-- Indicates a successful or positive action --&gt; &lt;button type=&quot;submit&quot; class=&quot;btn btn-success&quot; name=&quot;login&quot; value=&quot;登录&quot;&gt;Sign in&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &#123;&#123; form1.errors &#125;&#125; &lt;/div&gt;&lt;/div&gt; &lt;script src=&quot;&#123;% static &#x27;js/jquery-3.6.0.js&#x27; %&#125;&quot;&gt;&lt;/script&gt; &lt;script src=&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/js/bootstrap.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; views.user 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#登录、注册放在一起了def reg(request): regForm = UserInfoForm() loginForm = UserInfoLoginForm() if request.method==&#x27;GET&#x27;: return render(request,&#x27;reg.html&#x27;,&#123;&quot;regForm&quot;:regForm,&quot;loginForm&quot;:loginForm&#125;) #判断是login、reg提交的数据 reg1 = request.POST.get(&quot;reg&quot;) login1 = request.POST.get(&quot;login&quot;) # print(reg1,login1) if reg1: regForm = UserInfoForm(data=request.POST) if regForm.is_valid(): #从数据库获取用户信息，没有则添加 username = regForm.cleaned_data.get(&#x27;username&#x27;) password = regForm.cleaned_data.get(&#x27;password&#x27;) user_obj = models.UserInfo.objects.filter(username=username).first() if not user_obj: models.UserInfo.objects.create(username=username,password=password) else: regForm.errors[&quot;username&quot;] = &quot;当前用户已存在！&quot; return render(request, &#x27;reg.html&#x27;, &#123;&quot;regForm&quot;: regForm,&quot;loginForm&quot;:loginForm&#125;,) return redirect(&#x27;/index/&#x27;) else: return render(request,&#x27;reg.html&#x27;,&#123;&quot;regForm&quot;:regForm,&quot;loginForm&quot;:loginForm&#125;) #登录 elif login1: loginForm = UserInfoLoginForm(data=request.POST) #先判断验证码 user_input_code = request.POST.get(&quot;code&quot;) code = request.session.get(&#x27;image_code&#x27;, &quot;&quot;) print(loginForm.errors) if code.upper() != user_input_code.upper(): loginForm.errors[&quot;code&quot;] = &quot;验证码错误&quot; return render(request, &#x27;reg.html&#x27;, &#123;&quot;loginForm&quot;: loginForm, &quot;regForm&quot;: regForm&#125;) #判断账号密码，并且设置user session 生存期 if loginForm.is_valid(): username = loginForm.cleaned_data.get(&#x27;username&#x27;) password = loginForm.cleaned_data.get(&#x27;password&#x27;) print(&quot;go index&quot;) #将信息保存到session,并且设置session的生存期为七天 request.session[&#x27;info&#x27;] = &#123;&#x27;username&#x27;: username, &#x27;password&#x27;: password&#125; request.session.set_expiry(7 * 24 * 3600) return redirect(&#x27;/index/&#x27;) return render(request, &#x27;reg.html&#x27;, &#123;&quot;loginForm&quot;: loginForm,&quot;regForm&quot;:regForm &#125; ) form.py 1234567891011121314151617181920212223242526272829303132333435363738394041#文件路径： app01/utils/form.py#BosstStrapForm 略写 #注册class UserInfoForm(BootStrapForm): username = forms.CharField(label=&quot;用户名&quot;, min_length=2) password = forms.CharField(label=&quot;密码&quot;, widget=forms.PasswordInput(render_value=True), min_length = 3) confirm_password = forms.CharField( label=&quot;确认密码:&quot;, min_length=3, widget=forms.PasswordInput(render_value=True), ) def clean(self): &quot;&quot;&quot;在通过基础验证的干净数据中get获取字段&quot;&quot;&quot; pwd1 = self.cleaned_data.get(&#x27;password&#x27;) pwd2 = self.cleaned_data.get(&#x27;confirm_password&#x27;) if pwd1 == pwd2: # 数据没问题，那么原封不动返回即可 return self.cleaned_data else: # 错误信息储存到 errors &#123;&#x27;__all__&#x27;:[e,]&#125; self.errors[&quot;confirm_password&quot;] =&quot;两次密码输入不同&quot; raise forms.ValidationError(&#x27;两次密码输入不同&#x27;)# 登录class UserInfoLoginForm(BootStrapForm): username = forms.CharField(label=&quot;用户名&quot;, min_length=2) password = forms.CharField(label=&quot;密码&quot;, widget=forms.PasswordInput(render_value=True), min_length=3) code = forms.CharField(label=&quot;验证码&quot;,widget=forms.TextInput()) def clean(self): &quot;&quot;&quot;在通过基础验证的干净数据中get获取字段&quot;&quot;&quot; username = self.cleaned_data.get(&#x27;username&#x27;) password = self.cleaned_data.get(&#x27;password&#x27;) user_obj = models.UserInfo.objects.filter(username=username).first() if not user_obj: self.errors[&quot;username&quot;] = &quot;当前用户不存在！&quot; raise forms.ValidationError(&quot;当前用户不存在&quot;) elif password != user_obj.password: self.errors[&quot;password&quot;] = &quot;密码错误！&quot; raise forms.ValidationError(&quot;密码错误&quot;) else: return self.cleaned_data 验证码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283# 文件路径： app01/utils/yanzm.pyimport randomfrom PIL import Image, ImageDraw, ImageFont, ImageFilter# &quot;C:\\Users\\24119\\Desktop\\pyweb\\web\\static\\font\\AaManYuShouXieTi.ttf&quot;# 参数已经写的很清楚了def check_code(font_file=&quot;Candara.ttf&quot;, width=120, height=30, char_length=4, font_size=28): code = [] img = Image.new(mode=&#x27;RGB&#x27;, size=(width, height), color=(255, 255, 255)) draw = ImageDraw.Draw(img, mode=&#x27;RGB&#x27;) def rndChar(): &quot;&quot;&quot; 生成随机字母 :return: &quot;&quot;&quot; return chr(random.randint(65, 90)) def rndColor(): &quot;&quot;&quot; 生成随机颜色 :return: &quot;&quot;&quot; return (random.randint(0, 255), random.randint(10, 255), random.randint(64, 255)) # 写文字 font = ImageFont.truetype(font_file, font_size) for i in range(char_length): char = rndChar() code.append(char) h = random.randint(0, 4) draw.text([i * width / char_length, h], char, font=font, fill=rndColor()) # 写干扰点 for i in range(20): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) # 写干扰圆圈 for i in range(20): draw.point([random.randint(0, width), random.randint(0, height)], fill=rndColor()) x = random.randint(0, width) y = random.randint(0, height) draw.arc((x, y, x + 4, y + 4), 0, 90, fill=rndColor()) # 画干扰线 for i in range(3): x1 = random.randint(0, width) y1 = random.randint(0, height) x2 = random.randint(0, width) y2 = random.randint(0, height) draw.line((x1, y1, x2, y2), fill=rndColor()) img = img.filter(ImageFilter.EDGE_ENHANCE_MORE) return img, &#x27;&#x27;.join(code)if __name__ == &#x27;__main__&#x27;: # 1. 直接打开 img, code = check_code() print(code) # img.show() # 2. 写入文件 img,code = check_code() with open(&#x27;code.png&#x27;,&#x27;wb&#x27;) as f: img.save(f,format=&#x27;png&#x27;) # 3. 写入内存(Python3) # from io import BytesIO # img,code = check_code() # stream = BytesIO() # img.save(stream, &#x27;png&#x27;) # stream.getvalue() # 4. 写入内存（Python2） # import StringIO # stream = StringIO.StringIO() # img.save(stream, &#x27;png&#x27;) # stream.getvalue() 验证码渲染前端函数 1234567891011121314151617# 文件路径 app01/views/other.pyfrom io import BytesIOimport os# 打开reg.html默认会生成效验码def img_code(request): # 声明全局字段 global code_string # 调用check_code()函数 img, code_string = check_code() stream = BytesIO() img.save(stream, &#x27;png&#x27;) # request.session[&#x27;image_code&#x27;] = code_string request.session.set_expiry(60) print(code_string) # 返回的是图像,当然我们还取到了一个code_string,是图片验证码的原字符，这用来和前端输入的验证码进行比较 return HttpResponse(stream.getvalue()) 2.用户文件管理描述： 只显示用户上传的文件 回顾困境：设计过程中，因为在setting.py中设置了MEDIA_ROOT，在拼接完路径时，无法访问；在一直在犹豫文件路径应该怎么形式保存；读取用户的专属文件， 总结： 回头看，确实是瞎操心；两个并不冲突，只需要理清先后顺序就能解决；不要想着同时解决，先完成功能在考虑优化，不要同时考虑两件事情; 问题 问题一：media下文件分类问题： 最终设置：保存路劲均为media的下一层 问题二：读取全部文件问题 场景：不同用户，相同文件之间的冲突 问题三：支持分类显示 代码在app下新建media文件夹 ，设置不同文件包 media&#x2F;account&#x2F;微信支付账单(20230901-20231201).csv media&#x2F;img&#x2F;北极熊.png media&#x2F;radio setting.py 12345#必须配置import osMEDIA_ROOT = os.path.join(BASE_DIR,&quot;media/&quot;)MEDIA_URL = &quot;/media/&quot; 视图函数： 12345678910111213141516171819202122232425262728#文件管理#使用到了两个库：userinfo用户表和UserFile文件表def document_manage(request): form = documentManagerForm info = request.session.get(&quot;info&quot;) user_obj = UserInfo.objects.filter(username=info.get(&quot;username&quot;)).first() userFile = UserFile.objects.filter(userinfo=user_obj) # print(&quot;userFile:&quot;,userFile,type(userFile)) for field in userFile: if field.fileType == 1: s_filename = field.filepath.name.split(&#x27;/&#x27;) field.filepath = s_filename[len(s_filename) - 1] if request.method == &#x27;GET&#x27;: return render(request, &#x27;index_document.html&#x27;,&#123;&quot;form&quot;:form,&quot;userFile&quot;:userFile&#125;) if request.method == &#x27;POST&#x27;: return render(request, &#x27;index_document.html&#x27;)#根据文件类型查看文件def document_Typeid(request,tid): form = documentManagerForm info = request.session.get(&quot;info&quot;) user_obj = UserInfo.objects.filter(username=info.get(&quot;username&quot;)).first() userFile = UserFile.objects.filter(userinfo=user_obj, fileType=tid) print(&quot;成功&quot;) for field in userFile: if tid == 1: s_filename = field.filepath.name.split(&#x27;/&#x27;) field.filepath = s_filename[len(s_filename) - 1] return render(request, &#x27;index_document.html&#x27;,&#123;&quot;form&quot;:form,&quot;userFile&quot;:userFile&#125;) Form模型 12345678910111213class documentManagerForm(BootStrapForm): id = forms.IntegerField() fileType = forms.CharField( label=&quot;文件类型&quot;, widget=forms.Select() ) filepath = forms.FileField( label=&quot;文件名&quot;, ) fileinfo = forms.CharField( max_length=128, label=&quot;备注&quot;, ), HTML 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&#123;% extends &#x27;indexLayout.html&#x27; %&#125;&#123;% block css %&#125; &lt;style&gt;&lt;/style&gt;&#123;% endblock %&#125;&#123;% block content %&#125; 显示用户的所有文件 &lt;div&gt; &lt;div class=&quot;bs-example&quot; data-example-id=&quot;hoverable-table&quot;&gt; &lt;div class=&quot;panel panel-default&quot;&gt; &lt;div class=&quot;panel-heading&quot;&gt; &lt;span class=&quot;glyphicon glyphicon-th-list&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; 文件列表 &lt;/div&gt; &lt;div class=&quot;panel-body&quot;&gt; &lt;table class=&quot;table table-hover&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;序号&lt;/th&gt; &lt;th&gt; &lt;div class=&quot;dropdown mt-1&quot;&gt; &lt;a style=&quot;color: black&quot; class=&quot; dropdown-toggle show&quot; type=&quot;button&quot; id=&quot;dropdownMenuButton&quot; data-bs-toggle=&quot;dropdown&quot; aria-expanded=&quot;true&quot;&gt; 文件类型 &lt;/a&gt; &lt;ul class=&quot;dropdown-menu &quot; aria-labelledby=&quot;dropdownMenuButton&quot; style=&quot;position: absolute; inset: auto auto 0px 0px; margin: 0px; transform: translate3d(0px, -40px, 0px);&quot; data-popper-placement=&quot;top-start&quot;&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=&quot;/index/&#123;&#123; 1 &#125;&#125;/documentManage/&quot;&gt;账簿文件&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=&quot;/index/&#123;&#123; 3 &#125;&#125;/documentManage/&quot;&gt;图像&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=&quot;/index/&#123;&#123; 2 &#125;&#125;/documentManage/&quot;&gt;音频文件&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;dropdown-item&quot; href=&quot;/index/documentManage/&quot;&gt;全部&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/th&gt; &lt;th&gt;文件名&lt;/th&gt; &lt;th&gt;备注&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &#123;% for field in userFile %&#125; &lt;tr style=&quot;text-align: center;vertical-align: middle&quot;&gt; &lt;td&gt;&#123;&#123; field.id &#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123; field.get_fileType_display &#125;&#125;&lt;/td&gt; &#123;% if field.fileType == 3 %&#125; &lt;td&gt;&lt;img src=&quot;/media/&#123;&#123; field.filepath &#125;&#125;&quot; style=&quot;height:60px&quot;&gt;&lt;/td&gt; &#123;% else %&#125; &lt;td&gt;&#123;&#123; field.filepath &#125;&#125;&lt;/td&gt; &#123;% endif %&#125; &lt;td&gt;&#123;&#123; field.fileinfo &#125;&#125;&lt;/td&gt; &lt;td&gt; &lt;a class=&quot;btn-primary btn-sm&quot; href=&quot;#&quot;&gt;编辑&lt;/a&gt; &lt;a class=&quot;btn-danger btn-sm&quot; href=&quot;#&quot;&gt;删除&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &#123;% endfor %&#125; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&#123;% endblock %&#125;"}]